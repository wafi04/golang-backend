// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.12.4
// source: grpc/pb/stock.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VariantId     string                 `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity      int64                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stock) Reset() {
	*x = Stock{}
	mi := &file_grpc_pb_stock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *Stock) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Stock) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Stock) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ChangeStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VariantId     string                 `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity      int64                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStockRequest) Reset() {
	*x = ChangeStockRequest{}
	mi := &file_grpc_pb_stock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStockRequest) ProtoMessage() {}

func (x *ChangeStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStockRequest.ProtoReflect.Descriptor instead.
func (*ChangeStockRequest) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{1}
}

func (x *ChangeStockRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *ChangeStockRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VariantId     string                 `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStockRequest) Reset() {
	*x = GetStockRequest{}
	mi := &file_grpc_pb_stock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockRequest) ProtoMessage() {}

func (x *GetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockRequest.ProtoReflect.Descriptor instead.
func (*GetStockRequest) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{2}
}

func (x *GetStockRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

type BatchGetStockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VariantIds    []string               `protobuf:"bytes,1,rep,name=variant_ids,json=variantIds,proto3" json:"variant_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetStockRequest) Reset() {
	*x = BatchGetStockRequest{}
	mi := &file_grpc_pb_stock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetStockRequest) ProtoMessage() {}

func (x *BatchGetStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetStockRequest.ProtoReflect.Descriptor instead.
func (*BatchGetStockRequest) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetStockRequest) GetVariantIds() []string {
	if x != nil {
		return x.VariantIds
	}
	return nil
}

type BatchGetStockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetStockResponse) Reset() {
	*x = BatchGetStockResponse{}
	mi := &file_grpc_pb_stock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetStockResponse) ProtoMessage() {}

func (x *BatchGetStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetStockResponse.ProtoReflect.Descriptor instead.
func (*BatchGetStockResponse) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{4}
}

func (x *BatchGetStockResponse) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type CheckStockAvailabilityRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VariantId         string                 `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	RequestedQuantity int64                  `protobuf:"varint,2,opt,name=requested_quantity,json=requestedQuantity,proto3" json:"requested_quantity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CheckStockAvailabilityRequest) Reset() {
	*x = CheckStockAvailabilityRequest{}
	mi := &file_grpc_pb_stock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckStockAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStockAvailabilityRequest) ProtoMessage() {}

func (x *CheckStockAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStockAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*CheckStockAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{5}
}

func (x *CheckStockAvailabilityRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *CheckStockAvailabilityRequest) GetRequestedQuantity() int64 {
	if x != nil {
		return x.RequestedQuantity
	}
	return 0
}

type CheckStockAvailabilityResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable       bool                   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	AvailableQuantity int64                  `protobuf:"varint,2,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CheckStockAvailabilityResponse) Reset() {
	*x = CheckStockAvailabilityResponse{}
	mi := &file_grpc_pb_stock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckStockAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStockAvailabilityResponse) ProtoMessage() {}

func (x *CheckStockAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_pb_stock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStockAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*CheckStockAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_grpc_pb_stock_proto_rawDescGZIP(), []int{6}
}

func (x *CheckStockAvailabilityResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *CheckStockAvailabilityResponse) GetAvailableQuantity() int64 {
	if x != nil {
		return x.AvailableQuantity
	}
	return 0
}

var File_grpc_pb_stock_proto protoreflect.FileDescriptor

var file_grpc_pb_stock_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x80, 0x01, 0x0a, 0x05, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4f, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x37, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x73, 0x22, 0x6d, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x72, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x32, 0x93, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x66, 0x69,
	0x30, 0x34, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_grpc_pb_stock_proto_rawDescOnce sync.Once
	file_grpc_pb_stock_proto_rawDescData []byte
)

func file_grpc_pb_stock_proto_rawDescGZIP() []byte {
	file_grpc_pb_stock_proto_rawDescOnce.Do(func() {
		file_grpc_pb_stock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_pb_stock_proto_rawDesc), len(file_grpc_pb_stock_proto_rawDesc)))
	})
	return file_grpc_pb_stock_proto_rawDescData
}

var file_grpc_pb_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_grpc_pb_stock_proto_goTypes = []any{
	(*Stock)(nil),                          // 0: pb.Stock
	(*ChangeStockRequest)(nil),             // 1: pb.ChangeStockRequest
	(*GetStockRequest)(nil),                // 2: pb.GetStockRequest
	(*BatchGetStockRequest)(nil),           // 3: pb.BatchGetStockRequest
	(*BatchGetStockResponse)(nil),          // 4: pb.BatchGetStockResponse
	(*CheckStockAvailabilityRequest)(nil),  // 5: pb.CheckStockAvailabilityRequest
	(*CheckStockAvailabilityResponse)(nil), // 6: pb.CheckStockAvailabilityResponse
}
var file_grpc_pb_stock_proto_depIdxs = []int32{
	0, // 0: pb.BatchGetStockResponse.stocks:type_name -> pb.Stock
	1, // 1: pb.StockService.ChangeStock:input_type -> pb.ChangeStockRequest
	2, // 2: pb.StockService.GetStock:input_type -> pb.GetStockRequest
	3, // 3: pb.StockService.BatchGetStock:input_type -> pb.BatchGetStockRequest
	5, // 4: pb.StockService.CheckStockAvailability:input_type -> pb.CheckStockAvailabilityRequest
	0, // 5: pb.StockService.ChangeStock:output_type -> pb.Stock
	0, // 6: pb.StockService.GetStock:output_type -> pb.Stock
	4, // 7: pb.StockService.BatchGetStock:output_type -> pb.BatchGetStockResponse
	6, // 8: pb.StockService.CheckStockAvailability:output_type -> pb.CheckStockAvailabilityResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpc_pb_stock_proto_init() }
func file_grpc_pb_stock_proto_init() {
	if File_grpc_pb_stock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_pb_stock_proto_rawDesc), len(file_grpc_pb_stock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_pb_stock_proto_goTypes,
		DependencyIndexes: file_grpc_pb_stock_proto_depIdxs,
		MessageInfos:      file_grpc_pb_stock_proto_msgTypes,
	}.Build()
	File_grpc_pb_stock_proto = out.File
	file_grpc_pb_stock_proto_goTypes = nil
	file_grpc_pb_stock_proto_depIdxs = nil
}
